{"ast":null,"code":"var _jsxFileName = \"D:\\\\04 - React\\\\Movie_finder\\\\client\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport MovieCard from \"./components/MovieCard\";\nimport SearchIcon from \"./search.svg\";\nimport \"./App.css\";\nimport API_URL from \"./config/constants\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [movies, setMovies] = useState([]);\n  const [message, setMessage] = useState(\"\");\n\n  /**\r\n   * Fetch movies from the API based on search term\r\n   * @async\r\n   * @function\r\n   * @param {string} title - Search term\r\n   * @throws {Error} if API request fails\r\n   */\n  const getMovies = async title => {\n    try {\n      const response = await fetch(`${API_URL}/movies?title=${title}`); // Correctly appending title as query parameter\n      if (!response.ok) {\n        const errorData = await response.json(); // Try to get error message from server\n        throw new Error(errorData.message || response.statusText);\n      }\n      const data = await response.json();\n      setMovies(data.Search || []); // Handle cases where Search might be undefined\n\n      if (data.Search && data.Search.length > 0) {\n        setMessage(\"\");\n      } else {\n        setMessage(\"Désolé, nous n'avons rien trouvé avec ce nom. Veuillez réessayer!\");\n      }\n    } catch (error) {\n      console.error(\"Une erreur est survenue:\", error);\n      setMessage(\"Une erreur est survenue. Veuillez réessayer plus tard.\");\n    }\n  };\n  const handleTerm = e => {\n    if (e.target.value === \"\") {\n      setSearchTerm(\"\");\n      setMessage(\"\"); // Reset message on clear\n      return;\n    }\n    if (/^[a-zA-Z0-9\\s]+$/.test(e.target.value)) {\n      setSearchTerm(e.target.value);\n      setMessage(\"\");\n    } else {\n      setMessage(\"Veuillez ne pas utiliser de caractères spéciaux\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Movie finder\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"search-input\",\n        value: searchTerm,\n        onChange: handleTerm,\n        placeholder: \"Entrez un nom de film/s\\xE9rie\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: SearchIcon,\n        alt: \"search\",\n        onClick: () => getMovies(searchTerm)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), movies.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: movies.map(movie => /*#__PURE__*/_jsxDEV(MovieCard, {\n        movie: movie,\n        isMovieSelected: false\n      }, movie.imdbID, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"empty\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 9\n  }, this);\n};\n_s(App, \"zoot2zbBP7Ege4JwrcSH2jVF6fU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","MovieCard","SearchIcon","API_URL","jsxDEV","_jsxDEV","App","_s","searchTerm","setSearchTerm","movies","setMovies","message","setMessage","getMovies","title","response","fetch","ok","errorData","json","Error","statusText","data","Search","length","error","console","handleTerm","e","target","value","test","className","children","fileName","_jsxFileName","lineNumber","columnNumber","id","onChange","placeholder","src","alt","onClick","map","movie","isMovieSelected","imdbID","_c","$RefreshReg$"],"sources":["D:/04 - React/Movie_finder/client/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport MovieCard from \"./components/MovieCard\";\r\nimport SearchIcon from \"./search.svg\";\r\nimport \"./App.css\";\r\nimport API_URL from \"./config/constants\";\r\n\r\nconst App = () => {\r\n    const [searchTerm, setSearchTerm] = useState(\"\");\r\n    const [movies, setMovies] = useState([]);\r\n    const [message, setMessage] = useState(\"\");\r\n\r\n    /**\r\n     * Fetch movies from the API based on search term\r\n     * @async\r\n     * @function\r\n     * @param {string} title - Search term\r\n     * @throws {Error} if API request fails\r\n     */\r\n    const getMovies = async (title) => {\r\n        try {\r\n            const response = await fetch(`${API_URL}/movies?title=${title}`); // Correctly appending title as query parameter\r\n            if (!response.ok) {\r\n                const errorData = await response.json(); // Try to get error message from server\r\n                throw new Error(errorData.message || response.statusText);\r\n            }\r\n            const data = await response.json();\r\n            setMovies(data.Search || []); // Handle cases where Search might be undefined\r\n\r\n            if (data.Search && data.Search.length > 0) {\r\n                setMessage(\"\");\r\n            } else {\r\n                setMessage(\"Désolé, nous n'avons rien trouvé avec ce nom. Veuillez réessayer!\");\r\n            }\r\n        } catch (error) {\r\n            console.error(\"Une erreur est survenue:\", error);\r\n            setMessage(\"Une erreur est survenue. Veuillez réessayer plus tard.\");\r\n        }\r\n    };\r\n\r\n    const handleTerm = (e) => {\r\n        if (e.target.value === \"\") {\r\n            setSearchTerm(\"\");\r\n            setMessage(\"\"); // Reset message on clear\r\n            return;\r\n        }\r\n        if (/^[a-zA-Z0-9\\s]+$/.test(e.target.value)) {\r\n            setSearchTerm(e.target.value);\r\n            setMessage(\"\");\r\n        } else {\r\n            setMessage(\"Veuillez ne pas utiliser de caractères spéciaux\");\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"app\">\r\n            <h1>Movie finder</h1>\r\n            <div className=\"search\">\r\n                <input\r\n                    id=\"search-input\"\r\n                    value={searchTerm}\r\n                    onChange={handleTerm}\r\n                    placeholder=\"Entrez un nom de film/série\"\r\n                />\r\n                <img src={SearchIcon} alt=\"search\" onClick={() => getMovies(searchTerm)} />\r\n            </div>\r\n            {movies.length > 0 ? (\r\n                <div className=\"container\">\r\n                    {movies.map((movie) => (\r\n                        <MovieCard key={movie.imdbID} movie={movie} isMovieSelected={false} />\r\n                    ))}\r\n                </div>\r\n            ) : (\r\n                <div className=\"empty\">\r\n                    <h2>{message}</h2>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default App;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}