{"ast":null,"code":"var _jsxFileName = \"D:\\\\projet_React\\\\Movie_finder\\\\src\\\\components\\\\MovieCard.jsx\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MovieCard = ({\n  movie: {\n    imdbID,\n    Year,\n    Poster,\n    Title,\n    Type\n  },\n  setSelectedMovie,\n  isSelected\n}) => {\n  // imdbID => id\n  // Year => année de sortie\n  // Poster => image\n  // Title => titre\n  // Type => film, animé, ...\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `movie ${isSelected ? \"selected\" : \"\"}`,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: Year\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: Poster !== \"N/A\" ? Poster : \"https://via.placeholder.com/400\",\n        alt: Title,\n        onClick: () => {\n          setSelectedMovie(imdbID);\n          console.log(`Film sélectionné: ${Title}`); // Affiche l'ID du film sélectionné dans la console\n        },\n        className: isSelected ? 'enlarged' : ''\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: Type\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: Title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, imdbID, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n};\n_c = MovieCard;\nexport default MovieCard;\nvar _c;\n$RefreshReg$(_c, \"MovieCard\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","MovieCard","movie","imdbID","Year","Poster","Title","Type","setSelectedMovie","isSelected","className","children","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","onClick","console","log","_c","$RefreshReg$"],"sources":["D:/projet_React/Movie_finder/src/components/MovieCard.jsx"],"sourcesContent":["import React from \"react\";\r\n\r\n\r\nconst MovieCard = ({ movie: { imdbID, Year, Poster, Title, Type }, setSelectedMovie, isSelected}) => {\r\n  // imdbID => id\r\n  // Year => année de sortie\r\n  // Poster => image\r\n  // Title => titre\r\n  // Type => film, animé, ...\r\n\r\n  return (\r\n    <div className={`movie ${isSelected ? \"selected\" : \"\"}`} key={imdbID}>\r\n      <div>\r\n        <p>{Year}</p>\r\n      </div>\r\n\r\n      <div>\r\n        {/* si l'API renvoie aucun poster (\"N/A\") alors on utilise un placeholder 400x400 */}\r\n        <img\r\n          src={Poster !== \"N/A\" ? Poster : \"https://via.placeholder.com/400\"}\r\n          alt={Title}\r\n          onClick={() => {\r\n            setSelectedMovie(imdbID);\r\n            console.log(`Film sélectionné: ${Title}`); // Affiche l'ID du film sélectionné dans la console\r\n          }}\r\n          className={isSelected ? 'enlarged' : ''}\r\n        />\r\n        {/* Affiche l'ID du film sélectionné */}\r\n        {/* {console.log(setSelectedMovie(imdbID))} */}\r\n      </div>\r\n\r\n      <div>\r\n        <span>{Type}</span>\r\n        <h3>{Title}</h3>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MovieCard;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAG1B,MAAMC,SAAS,GAAGA,CAAC;EAAEC,KAAK,EAAE;IAAEC,MAAM;IAAEC,IAAI;IAAEC,MAAM;IAAEC,KAAK;IAAEC;EAAK,CAAC;EAAEC,gBAAgB;EAAEC;AAAU,CAAC,KAAK;EACnG;EACA;EACA;EACA;EACA;;EAEA,oBACET,OAAA;IAAKU,SAAS,EAAG,SAAQD,UAAU,GAAG,UAAU,GAAG,EAAG,EAAE;IAAAE,QAAA,gBACtDX,OAAA;MAAAW,QAAA,eACEX,OAAA;QAAAW,QAAA,EAAIP;MAAI;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACV,CAAC,eAENf,OAAA;MAAAW,QAAA,eAEEX,OAAA;QACEgB,GAAG,EAAEX,MAAM,KAAK,KAAK,GAAGA,MAAM,GAAG,iCAAkC;QACnEY,GAAG,EAAEX,KAAM;QACXY,OAAO,EAAEA,CAAA,KAAM;UACbV,gBAAgB,CAACL,MAAM,CAAC;UACxBgB,OAAO,CAACC,GAAG,CAAE,qBAAoBd,KAAM,EAAC,CAAC,CAAC,CAAC;QAC7C,CAAE;QACFI,SAAS,EAAED,UAAU,GAAG,UAAU,GAAG;MAAG;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACzC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAGC,CAAC,eAENf,OAAA;MAAAW,QAAA,gBACEX,OAAA;QAAAW,QAAA,EAAOJ;MAAI;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACnBf,OAAA;QAAAW,QAAA,EAAKL;MAAK;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACb,CAAC;EAAA,GAvBsDZ,MAAM;IAAAS,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAwB/D,CAAC;AAEV,CAAC;AAACM,EAAA,GAlCIpB,SAAS;AAoCf,eAAeA,SAAS;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}