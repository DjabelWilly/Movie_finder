{"ast":null,"code":"var _jsxFileName = \"D:\\\\projet_React\\\\Movie_finder\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport MovieCard from \"./components/MovieCard\";\nimport SearchIcon from \"./search.svg\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_URL = \"http://www.omdbapi.com?apikey=b6003d8a\";\nconst App = () => {\n  _s();\n  // variable d'état qui contient la valeur de l'input de recherche\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  // variable d'état qui contient tous les films trouvés\n  const [movies, setMovies] = useState([]);\n  // variable d'état qui set un message en cas de film non trouvé\n  const [message, setMessage] = useState(\"\");\n\n  // Regex qui refuse les caractères spéciaux dans l'input de recherche\n  const handleTerm = e => {\n    if (/^[a-zA-Z0-9\\s]+$/.test(e.target.value)) {\n      setSearchTerm(e.target.value);\n    } else {\n      setMessage(\"Veuillez ne pas utiliser de caractères spéciaux\");\n    }\n  };\n\n  // fetch vers API avec gestion des erreurs \n  const searchMovies = async title => {\n    try {\n      const response = await fetch(`${API_URL}&s=${title}`);\n      if (!response.ok) throw new Error(response.status);\n      const data = await response.json();\n      setMovies(data.Search);\n      if (data.Search && data.Search.length > 0) {\n        setMessage(\"\"); // Réinitialise le message si des films sont trouvés\n      } else {\n        setMessage(\"Désolé, nous n'avons rien trouvé avec ce nom. Veuillez réessayer!\");\n      }\n    } catch (error) {\n      console.error('une erreur est survenue:', error);\n      setMessage(\"Une erreur est survenue. Veuillez réessayer plus tard.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \" Movie finder \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"search-input\",\n        value: searchTerm,\n        onChange: e => setSearchTerm(e.target.value),\n        placeholder: \"Entrez un nom de film/s\\xE9rie\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: SearchIcon,\n        alt: \"search\",\n        onClick: () => searchMovies(searchTerm)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), (movies === null || movies === void 0 ? void 0 : movies.length) > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: movies.map(movie => /*#__PURE__*/_jsxDEV(MovieCard, {\n        movie: movie\n      }, movie.imdbID, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"empty\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 9\n  }, this);\n};\n_s(App, \"zoot2zbBP7Ege4JwrcSH2jVF6fU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","MovieCard","SearchIcon","jsxDEV","_jsxDEV","API_URL","App","_s","searchTerm","setSearchTerm","movies","setMovies","message","setMessage","handleTerm","e","test","target","value","searchMovies","title","response","fetch","ok","Error","status","data","json","Search","length","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","id","onChange","placeholder","src","alt","onClick","map","movie","imdbID","_c","$RefreshReg$"],"sources":["D:/projet_React/Movie_finder/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport MovieCard from \"./components/MovieCard\";\r\nimport SearchIcon from \"./search.svg\";\r\nimport \"./App.css\";\r\n\r\nconst API_URL = \"http://www.omdbapi.com?apikey=b6003d8a\";\r\n\r\nconst App = () => {\r\n\r\n    // variable d'état qui contient la valeur de l'input de recherche\r\n    const [searchTerm, setSearchTerm] = useState(\"\");\r\n    // variable d'état qui contient tous les films trouvés\r\n    const [movies, setMovies] = useState([]);\r\n    // variable d'état qui set un message en cas de film non trouvé\r\n    const [message, setMessage] = useState(\"\");\r\n\r\n\r\n    // Regex qui refuse les caractères spéciaux dans l'input de recherche\r\n    const handleTerm = (e) => {\r\n\r\n        if (/^[a-zA-Z0-9\\s]+$/.test(e.target.value)) {\r\n            setSearchTerm(e.target.value)\r\n        } else {\r\n            setMessage(\"Veuillez ne pas utiliser de caractères spéciaux\")\r\n        }\r\n\r\n    };\r\n\r\n    // fetch vers API avec gestion des erreurs \r\n    const searchMovies = async (title) => {\r\n        try {\r\n            const response = await fetch(`${API_URL}&s=${title}`);\r\n\r\n            if (!response.ok)\r\n                throw new Error(response.status);\r\n\r\n            const data = await response.json();\r\n            setMovies(data.Search);\r\n\r\n            if (data.Search && data.Search.length > 0) {\r\n                setMessage(\"\"); // Réinitialise le message si des films sont trouvés\r\n            } else {\r\n                setMessage(\"Désolé, nous n'avons rien trouvé avec ce nom. Veuillez réessayer!\");\r\n            }\r\n        } catch (error) {\r\n            console.error('une erreur est survenue:', error);\r\n            setMessage(\"Une erreur est survenue. Veuillez réessayer plus tard.\");\r\n        }\r\n\r\n    };\r\n\r\n\r\n    return (\r\n        <div className=\"app\">\r\n            <h1> Movie finder </h1>\r\n\r\n            <div className=\"search\">\r\n                <input\r\n                    id=\"search-input\"\r\n                    value={searchTerm}\r\n                    onChange={(e) => setSearchTerm(e.target.value)}\r\n                    placeholder=\"Entrez un nom de film/série\"\r\n                />\r\n                <img\r\n                    src={SearchIcon}\r\n                    alt=\"search\"\r\n                    onClick={() => searchMovies(searchTerm)}\r\n                />\r\n            </div>\r\n\r\n            {movies?.length > 0 ? (\r\n                <div className=\"container\">\r\n                    {movies.map((movie) => (\r\n                        <MovieCard\r\n                            key={movie.imdbID}\r\n                            movie={movie}\r\n                        />\r\n                    ))}\r\n                </div>\r\n            ) : (\r\n                <div className=\"empty\">\r\n                    <h2>{message}</h2>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default App;\r\n\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}