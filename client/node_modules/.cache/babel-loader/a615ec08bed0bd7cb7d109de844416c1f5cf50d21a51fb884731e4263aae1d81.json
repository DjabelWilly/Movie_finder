{"ast":null,"code":"var _jsxFileName = \"D:\\\\04 - React\\\\Movie_finder\\\\client\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport MovieCard from \"./components/MovieCard\";\nimport SearchIcon from \"./search.svg\";\nimport \"./App.css\";\nimport API_URL from \"./config/constants\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [movies, setMovies] = useState([]);\n  const [message, setMessage] = useState(\"\");\n  const [selectedMovieId, setSelectedMovieId] = useState(null); // Gère l'affichage d'un seul film\n\n  const getMovies = async title => {\n    try {\n      const response = await fetch(`${API_URL}/movies?title=${title}`);\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.message || response.statusText);\n      }\n      const data = await response.json();\n      setMovies(data.Search || []);\n      setMessage(data.Search && data.Search.length > 0 ? \"\" : \"Désolé, nous n'avons rien trouvé avec ce nom.\");\n    } catch (error) {\n      console.error(\"Une erreur est survenue:\", error);\n      setMessage(\"Une erreur est survenue. Veuillez réessayer plus tard.\");\n    }\n  };\n  const handleTerm = e => {\n    const searchTerm = e.target.value;\n    const regex = /^[a-zA-Z0-9\\s-_]*$/i; // Autorise uniquement les lettres, chiffres, espaces, tirets\n    if (!regex.test(searchTerm)) {\n      setMessage(`Les caractères spéciaux ne sont pas autorisés.`);\n    }\n    ;\n    if (searchTerm === \"\" && message !== \"Les caractères spéciaux ne sont pas autorisés.\") {\n      setMessage(\"Veuillez entrer un nom de film ou une série.\");\n    }\n    setMessage(\"\");\n\n    // Si le terme de recherche est valide, mettez à jour le terme de recherche\n    regex.test(searchTerm) && setSearchTerm(searchTerm);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Movie Finder\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        value: searchTerm,\n        onChange: handleTerm,\n        placeholder: \"Entrez un nom de film ou une s\\xE9rie\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: SearchIcon,\n        alt: \"search\",\n        onClick: () => getMovies(searchTerm)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"message\",\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 25\n    }, this), selectedMovieId ? /*#__PURE__*/_jsxDEV(MovieCard, {\n      movie: movies.find(m => m.imdbID === selectedMovieId),\n      selectedMovieId: selectedMovieId,\n      setSelectedMovieId: setSelectedMovieId\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 17\n    }, this) :\n    /*#__PURE__*/\n    // Sinon, afficher la liste des films recherchés par le titre\n    _jsxDEV(\"div\", {\n      className: \"container\",\n      children: movies.map(movie => /*#__PURE__*/_jsxDEV(MovieCard, {\n        movie: movie,\n        selectedMovieId: selectedMovieId,\n        setSelectedMovieId: setSelectedMovieId\n      }, movie.imdbID, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n};\n_s(App, \"ls68cwocweFysYs6uQn+P0suozg=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","MovieCard","SearchIcon","API_URL","jsxDEV","_jsxDEV","App","_s","searchTerm","setSearchTerm","movies","setMovies","message","setMessage","selectedMovieId","setSelectedMovieId","getMovies","title","response","fetch","ok","errorData","json","Error","statusText","data","Search","length","error","console","handleTerm","e","target","value","regex","test","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","placeholder","src","alt","onClick","movie","find","m","imdbID","map","_c","$RefreshReg$"],"sources":["D:/04 - React/Movie_finder/client/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport MovieCard from \"./components/MovieCard\";\r\nimport SearchIcon from \"./search.svg\";\r\nimport \"./App.css\";\r\nimport API_URL from \"./config/constants\";\r\n\r\nconst App = () => {\r\n    const [searchTerm, setSearchTerm] = useState(\"\");\r\n    const [movies, setMovies] = useState([]);\r\n    const [message, setMessage] = useState(\"\");\r\n    const [selectedMovieId, setSelectedMovieId] = useState(null); // Gère l'affichage d'un seul film\r\n\r\n    const getMovies = async (title) => {\r\n        try {\r\n            const response = await fetch(`${API_URL}/movies?title=${title}`);\r\n            if (!response.ok) {\r\n                const errorData = await response.json();\r\n                throw new Error(errorData.message || response.statusText);\r\n            }\r\n            const data = await response.json();\r\n            setMovies(data.Search || []);\r\n            setMessage(data.Search && data.Search.length > 0 ? \"\" : \"Désolé, nous n'avons rien trouvé avec ce nom.\");\r\n        } catch (error) {\r\n            console.error(\"Une erreur est survenue:\", error);\r\n            setMessage(\"Une erreur est survenue. Veuillez réessayer plus tard.\");\r\n        }\r\n    };\r\n\r\n    const handleTerm = (e) => {\r\n        const searchTerm = e.target.value;\r\n        const regex = /^[a-zA-Z0-9\\s-_]*$/i; // Autorise uniquement les lettres, chiffres, espaces, tirets\r\n        if (!regex.test(searchTerm)) {\r\n            setMessage(`Les caractères spéciaux ne sont pas autorisés.`);\r\n\r\n        };\r\n        if (searchTerm === \"\" && message !== \"Les caractères spéciaux ne sont pas autorisés.\") {\r\n            setMessage(\"Veuillez entrer un nom de film ou une série.\");\r\n        }\r\n        setMessage(\"\");\r\n\r\n        // Si le terme de recherche est valide, mettez à jour le terme de recherche\r\n        regex.test(searchTerm) && setSearchTerm(searchTerm);\r\n\r\n    };\r\n\r\n    return (\r\n        <div className=\"app\">\r\n            <h1>Movie Finder</h1>\r\n\r\n            <div className=\"search\">\r\n                <input\r\n                    value={searchTerm}\r\n                    onChange={handleTerm}\r\n                    placeholder=\"Entrez un nom de film ou une série\"\r\n                />\r\n                <img src={SearchIcon} alt=\"search\" onClick={() => getMovies(searchTerm)} />\r\n            </div>\r\n            {message && <p className=\"message\">{message}</p>}\r\n\r\n            {/* Si un film est sélectionné, afficher uniquement ce film */}\r\n            {selectedMovieId ? (\r\n                <MovieCard\r\n                    movie={movies.find((m) => m.imdbID === selectedMovieId)}\r\n                    selectedMovieId={selectedMovieId}\r\n                    setSelectedMovieId={setSelectedMovieId}\r\n                />\r\n            ) : (\r\n                // Sinon, afficher la liste des films recherchés par le titre\r\n                <div className=\"container\">\r\n                    {movies.map((movie) => (\r\n                        <MovieCard\r\n                            key={movie.imdbID}\r\n                            movie={movie}\r\n                            selectedMovieId={selectedMovieId}\r\n                            setSelectedMovieId={setSelectedMovieId}\r\n                        />\r\n                    ))}\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default App;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}