{"ast":null,"code":"var _jsxFileName = \"D:\\\\04 - React\\\\Movie_finder\\\\client\\\\src\\\\components\\\\MovieCard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport API_URL from \"../config/constants\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst MovieCard = ({\n  movie: {\n    imdbID,\n    Year,\n    Poster,\n    Title,\n    Type\n  }\n}) => {\n  _s();\n  //id du film, année de sortie, image, titre, type(film/serie...)\n\n  const [isMovieSelected, setIsMovieSelected] = useState(false);\n\n  /**\r\n   * Gère le clic sur un film et affiche les details de ce film\r\n   * @async\r\n   * @function\r\n   * @param {string} id - Movie id\r\n   * @throws {Error} if API request fails\r\n   */\n  const handleMovieClick = id => {\n    /**\r\n     * Fetch movie details de l'OMDb API à partir de l'id\r\n     * @async\r\n     * @function\r\n     * @param {string} id - Movie id\r\n     * @throws {Error} if API request fails\r\n     */\n    const getMovieDetails = async () => {\n      try {\n        const response = await fetch(`${API_URL}/movieDetails?id=${id}`);\n        if (!response.ok) {\n          throw new Error(`OMDb API request failed with status ${response.status}`);\n        }\n        const data = await response.json();\n        console.log(data);\n      } catch (error) {\n        console.error(\"Une erreur est survenue:\", error);\n      }\n    };\n    getMovieDetails();\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [!isMovieSelected && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"movie\",\n      onClick: () => {\n        handleMovieClick(imdbID); // passe l'id du film cliqué à handleMovieClick\n        setIsMovieSelected(true);\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: Year\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"img-container\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: Poster === \"N/A\" ? \"https://via.placeholder.com/400\" : Poster,\n          alt: Title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bottom-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: Type\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: Title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this)]\n    }, imdbID, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this), isMovieSelected && /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 27\n    }, this)]\n  }, void 0, true);\n};\n_s(MovieCard, \"dAAhU/EDuCCG6LEiom1uEpgfTE4=\");\n_c = MovieCard;\nexport default MovieCard;\nvar _c;\n$RefreshReg$(_c, \"MovieCard\");","map":{"version":3,"names":["React","useState","API_URL","jsxDEV","_jsxDEV","Fragment","_Fragment","MovieCard","movie","imdbID","Year","Poster","Title","Type","_s","isMovieSelected","setIsMovieSelected","handleMovieClick","id","getMovieDetails","response","fetch","ok","Error","status","data","json","console","log","error","children","className","onClick","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","_c","$RefreshReg$"],"sources":["D:/04 - React/Movie_finder/client/src/components/MovieCard.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport API_URL from \"../config/constants\";\r\n\r\nconst MovieCard = ({ movie: { imdbID, Year, Poster, Title, Type } }) => {\r\n  //id du film, année de sortie, image, titre, type(film/serie...)\r\n\r\n  const [isMovieSelected, setIsMovieSelected] = useState(false);\r\n\r\n  /**\r\n   * Gère le clic sur un film et affiche les details de ce film\r\n   * @async\r\n   * @function\r\n   * @param {string} id - Movie id\r\n   * @throws {Error} if API request fails\r\n   */\r\n  const handleMovieClick = (id) => {\r\n    /**\r\n     * Fetch movie details de l'OMDb API à partir de l'id\r\n     * @async\r\n     * @function\r\n     * @param {string} id - Movie id\r\n     * @throws {Error} if API request fails\r\n     */\r\n    const getMovieDetails = async () => {\r\n      try {\r\n        const response = await fetch(`${API_URL}/movieDetails?id=${id}`);\r\n        if (!response.ok) {\r\n          throw new Error(\r\n            `OMDb API request failed with status ${response.status}`\r\n          );\r\n        }\r\n        const data = await response.json();\r\n        console.log(data);\r\n      } catch (error) {\r\n        console.error(\"Une erreur est survenue:\", error);\r\n      }\r\n    };\r\n\r\n    getMovieDetails();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {/* Affiche les films de la recherche par le titre */}\r\n      {!isMovieSelected && (\r\n        <div\r\n          className=\"movie\"\r\n          key={imdbID}\r\n          onClick={() => {\r\n            handleMovieClick(imdbID); // passe l'id du film cliqué à handleMovieClick\r\n            setIsMovieSelected(true);\r\n          }}\r\n        >\r\n          <div>\r\n            <p>{Year}</p>\r\n          </div>\r\n\r\n          <div className=\"img-container\">\r\n            {/* si l'API renvoie aucun poster (\"N/A\") alors on utilise un placeholder 400x400 */}\r\n            <img\r\n              src={\r\n                Poster === \"N/A\" ? \"https://via.placeholder.com/400\" : Poster\r\n              }\r\n              alt={Title}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"bottom-card\">\r\n            <h2>{Type}</h2>\r\n            <h3>{Title}</h3>\r\n          </div>\r\n        </div>\r\n      )}\r\n      {/* Affiche les details du film lorsqu'on clique sur celui-ci */}\r\n      {isMovieSelected && <div></div>}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MovieCard;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}